package view;

import static java.lang.System.err;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;     //JOptionPane, is so that we can display error messages.
/**
 * @author Me
 */
public class Workers1 extends javax.swing.JFrame {
    Connection con;     //connection object
    Statement stmt;     //statement object
    ResultSet rs;       //ResultSet object
    int curRow = 0;
    /**
     * Creates new form Workers
     */
    public Workers1() {
        initComponents();
        DoConnect();
    }
    public void DoConnect( ) {
        try {
            String host = "jdbc:mysql://localhost:3306/appstore";
            String username = "root";
            String password = "";
            con = DriverManager.getConnection(host, username, password);
            //Here, we're creating a Statement object called stmt. The Statement object needs a Connection object, with
            //the createStatment method.
            stmt = con.createStatement( ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE );  //ResultSet.TYPE_SCROLL_SENSITIVE
            String SQL = "SELECT * FROM customer";
            rs = stmt.executeQuery( SQL );
            //while (rs.next( )) {  //This will move the Cursor to the first record in the table.
                //int id_col = rs.getInt("ID");
                rs.next();
                String typeOfCustomer = rs.getString("typeOfCustomer");
                String name = rs.getString("name");
                String age = Integer.toString(rs.getInt("age"));
                String address = rs.getString("address");
                String profession = rs.getString("profession");
                String noOfAppsUsed = Integer.toString(rs.getInt("noOfAppsUsed"));
                String noOfAppsPurchased = Integer.toString(rs.getInt("noOfAppsPurchased"));
                //System.out.println( cus_name + " " + cus_address + " " + cus_usertype + " " + cus_noofappsused );
                textTypeOfCustomer.setText(typeOfCustomer);
                textName.setText(name);
                textAge.setText(age);
                textAddress.setText(address);
                textProfession.setText(profession);
                textNoOfAppsUsed.setText(noOfAppsUsed);
                textNoOfAppsPurchased.setText(noOfAppsPurchased);
            //}
        }
        catch ( SQLException err ) {
            JOptionPane.showMessageDialog(Workers1.this, err.getMessage());
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        textName = new javax.swing.JTextField();
        textAddress = new javax.swing.JTextField();
        textProfession = new javax.swing.JTextField();
        textNoOfAppsUsed = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnFirst = new javax.swing.JButton();
        btnPrevious = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        btnUpdateRecord = new javax.swing.JButton();
        btnNewRecord = new javax.swing.JButton();
        btnDeleteRecord = new javax.swing.JButton();
        btnSaveRecord = new javax.swing.JButton();
        btnCancelNewRecord = new javax.swing.JButton();
        textTypeOfCustomer = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        textAge = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        textNoOfAppsPurchased = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        textName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textNameActionPerformed(evt);
            }
        });

        textAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textAddressActionPerformed(evt);
            }
        });

        textProfession.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textProfessionActionPerformed(evt);
            }
        });

        jLabel1.setText("Name");

        jLabel2.setText("Address");

        jLabel3.setText("Profession");

        jLabel4.setText("No of Apps Used");

        jLabel5.setText("Customer Details");

        btnFirst.setText("First");
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        btnPrevious.setText("Previous");
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });

        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnLast.setText("Last");
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        btnUpdateRecord.setText("Update Record");
        btnUpdateRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateRecordActionPerformed(evt);
            }
        });

        btnNewRecord.setText("New Record");
        btnNewRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewRecordActionPerformed(evt);
            }
        });

        btnDeleteRecord.setText("Delete Record");
        btnDeleteRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteRecordActionPerformed(evt);
            }
        });

        btnSaveRecord.setText("Save New Record");
        btnSaveRecord.setEnabled(false);
        btnSaveRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveRecordActionPerformed(evt);
            }
        });

        btnCancelNewRecord.setText("Cancel New Record");
        btnCancelNewRecord.setEnabled(false);
        btnCancelNewRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelNewRecordActionPerformed(evt);
            }
        });

        textTypeOfCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textTypeOfCustomerActionPerformed(evt);
            }
        });

        jLabel6.setText("Type");

        textAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textAgeActionPerformed(evt);
            }
        });

        jLabel7.setText("Age");

        jLabel8.setText("No of Apps Purchased");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel7)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel1)))
                                .addGap(30, 30, 30)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textAge)
                            .addComponent(textAddress)
                            .addComponent(textProfession)
                            .addComponent(textNoOfAppsUsed)
                            .addComponent(textNoOfAppsPurchased)
                            .addComponent(textName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                            .addComponent(textTypeOfCustomer, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(153, 153, 153))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnFirst)
                        .addGap(18, 18, 18)
                        .addComponent(btnPrevious)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnNext)
                        .addGap(18, 18, 18)
                        .addComponent(btnLast)
                        .addGap(37, 37, 37))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnUpdateRecord)
                                .addGap(18, 18, 18)
                                .addComponent(btnNewRecord)
                                .addGap(18, 18, 18)
                                .addComponent(btnDeleteRecord))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addComponent(btnSaveRecord)
                                .addGap(18, 18, 18)
                                .addComponent(btnCancelNewRecord))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(jLabel5)))
                        .addContainerGap(161, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(textTypeOfCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(textName, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textAge, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(17, 17, 17))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(textAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textProfession, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textNoOfAppsUsed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textNoOfAppsPurchased, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFirst)
                    .addComponent(btnPrevious)
                    .addComponent(btnLast)
                    .addComponent(btnNext))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdateRecord)
                    .addComponent(btnNewRecord)
                    .addComponent(btnDeleteRecord))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSaveRecord)
                    .addComponent(btnCancelNewRecord))
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(117, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textNameActionPerformed

    private void textAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textAddressActionPerformed

    private void textProfessionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textProfessionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textProfessionActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        // TODO add your handling code here:
        try {
            rs.first();
                String typeOfCustomer = rs.getString("typeOfCustomer");
                String name = rs.getString("name");
                String age = Integer.toString(rs.getInt("age"));
                String address = rs.getString("address");
                String profession = rs.getString("profession");
                String noOfAppsUsed = Integer.toString(rs.getInt("noOfAppsUsed"));
                String noOfAppsPurchased = Integer.toString(rs.getInt("noOfAppsPurchased"));
                //System.out.println( cus_name + " " + cus_address + " " + cus_usertype + " " + cus_noofappsused );
                textTypeOfCustomer.setText(typeOfCustomer);
                textName.setText(name);
                textAge.setText(age);
                textAddress.setText(address);
                textProfession.setText(profession);
                textNoOfAppsUsed.setText(noOfAppsUsed);
                textNoOfAppsPurchased.setText(noOfAppsPurchased);
        }
            catch (SQLException err) {
            JOptionPane.showMessageDialog(Workers1.this, err.getMessage());
        }
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed
        // TODO add your handling code here:
        try {
            if (rs.previous()) {
                String typeOfCustomer = rs.getString("typeOfCustomer");
                String name = rs.getString("name");
                String age = Integer.toString(rs.getInt("age"));
                String address = rs.getString("address");
                String profession = rs.getString("profession");
                String noOfAppsUsed = Integer.toString(rs.getInt("noOfAppsUsed"));
                String noOfAppsPurchased = Integer.toString(rs.getInt("noOfAppsPurchased"));
                //System.out.println( cus_name + " " + cus_address + " " + cus_usertype + " " + cus_noofappsused );
                textTypeOfCustomer.setText(typeOfCustomer);
                textName.setText(name);
                textAge.setText(age);
                textAddress.setText(address);
                textProfession.setText(profession);
                textNoOfAppsUsed.setText(noOfAppsUsed);
                textNoOfAppsPurchased.setText(noOfAppsPurchased);
            }
            else {
                rs.next();
                JOptionPane.showMessageDialog(Workers1.this, "End of File");
            }
        }
            catch (SQLException err) {
            JOptionPane.showMessageDialog(Workers1.this, err.getMessage());
        }
    }//GEN-LAST:event_btnPreviousActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
        try {
            if (rs.next()) {
                String typeOfCustomer = rs.getString("typeOfCustomer");
                String name = rs.getString("name");
                String age = Integer.toString(rs.getInt("age"));
                String address = rs.getString("address");
                String profession = rs.getString("profession");
                String noOfAppsUsed = Integer.toString(rs.getInt("noOfAppsUsed"));
                String noOfAppsPurchased = Integer.toString(rs.getInt("noOfAppsPurchased"));
                //System.out.println( cus_name + " " + cus_address + " " + cus_usertype + " " + cus_noofappsused );
                textTypeOfCustomer.setText(typeOfCustomer);
                textName.setText(name);
                textAge.setText(age);
                textAddress.setText(address);
                textProfession.setText(profession);
                textNoOfAppsUsed.setText(noOfAppsUsed);
                textNoOfAppsPurchased.setText(noOfAppsPurchased);
            }
            else {
                rs.previous( );
                JOptionPane.showMessageDialog(Workers1.this, "End of File");
            }
        }
            catch (SQLException err) {
            JOptionPane.showMessageDialog(Workers1.this, err.getMessage());
        }
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        // TODO add your handling code here:
        try {
            rs.last();
                String typeOfCustomer = rs.getString("typeOfCustomer");
                String name = rs.getString("name");
                String age = Integer.toString(rs.getInt("age"));
                String address = rs.getString("address");
                String profession = rs.getString("profession");
                String noOfAppsUsed = Integer.toString(rs.getInt("noOfAppsUsed"));
                String noOfAppsPurchased = Integer.toString(rs.getInt("noOfAppsPurchased"));
                //System.out.println( cus_name + " " + cus_address + " " + cus_usertype + " " + cus_noofappsused );
                textTypeOfCustomer.setText(typeOfCustomer);
                textName.setText(name);
                textAge.setText(age);
                textAddress.setText(address);
                textProfession.setText(profession);
                textNoOfAppsUsed.setText(noOfAppsUsed);
                textNoOfAppsPurchased.setText(noOfAppsPurchased);
        }
            catch (SQLException err) {
            JOptionPane.showMessageDialog(Workers1.this, err.getMessage());
        }
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnUpdateRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateRecordActionPerformed
        // TODO add your handling code here:
        
        /*String typeOfCustomer = rs.getString("typeOfCustomer");
        String name = rs.getString("name");
        String age = Integer.toString(rs.getInt("age"));
        String address = rs.getString("address");
        String profession = rs.getString("profession");
        String noOfAppsUsed = Integer.toString(rs.getInt("noOfAppsUsed"));
        String noOfAppsPurchased = Integer.toString(rs.getInt("noOfAppsPurchased"));
        //System.out.println( cus_name + " " + cus_address + " " + cus_usertype + " " + cus_noofappsused );
        textTypeOfCustomer.setText(typeOfCustomer);
        textName.setText(name);
        textAge.setText(age);
        textAddress.setText(address);
        textProfession.setText(profession);
        textNoOfAppsUsed.setText(noOfAppsUsed);
        textNoOfAppsPurchased.setText(noOfAppsPurchased);*/
        
        String typeOfCustomer = textTypeOfCustomer.getText();
        String name = textName.getText();
        int age = Integer.parseInt(textAge.getText());
        String address = textAddress.getText();
        String profession = textProfession.getText();
        int NoOfAppsUsed = Integer.parseInt(textNoOfAppsUsed.getText());
        int NoOfAppsPurchased = Integer.parseInt(textNoOfAppsPurchased.getText());
        
        try {
            rs.updateString( "typeOfCustomer", typeOfCustomer );
            rs.updateString( "name", name );
            rs.updateInt( "age", age);
            rs.updateString( "address", address );
            rs.updateString( "profession", profession );
            rs.updateInt( "NoOfAppsUsed", NoOfAppsUsed );
            rs.updateInt( "NoOfAppsPurchased", NoOfAppsPurchased );
            rs.updateRow( );
            JOptionPane.showMessageDialog(Workers1.this, "Updated");
        } catch (SQLException err) {
            //System.out.println(err.getMessage());
            System.out.println(err.getMessage());
        }
    }//GEN-LAST:event_btnUpdateRecordActionPerformed

    private void btnNewRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewRecordActionPerformed
        try {
            // TODO add your handling code here:
            curRow = rs.getRow();
            
            textTypeOfCustomer.setText("");
            textName.setText("");
            textAge.setText("");
            textAddress.setText("");
            textProfession.setText("");
            textNoOfAppsUsed.setText("");
            textNoOfAppsPurchased.setText("");
            
            btnFirst.setEnabled( false );
            btnPrevious.setEnabled( false ) ;
            btnNext.setEnabled( false );
            btnLast.setEnabled( false );
            btnUpdateRecord.setEnabled( false );
            btnDeleteRecord.setEnabled( false );
            btnNewRecord.setEnabled( false );
            
            btnSaveRecord.setEnabled( true );
            btnCancelNewRecord.setEnabled( true );
        } catch (SQLException err) {
            System.out.println(err.getMessage());
        }
    }//GEN-LAST:event_btnNewRecordActionPerformed

    private void btnDeleteRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteRecordActionPerformed
        // TODO add your handling code here:
        try {
            rs.deleteRow( );
            stmt.close();
            rs.close();
            
            stmt = con.createStatement( ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE );  //ResultSet.TYPE_SCROLL_SENSITIVE
            String SQL = "SELECT * FROM customer";
            rs = stmt.executeQuery( SQL );
            
            rs.next();
            String typeOfCustomer = rs.getString("typeOfCustomer");
            String name = rs.getString("name");
            String age = Integer.toString(rs.getInt("age"));
            String address = rs.getString("address");
            String profession = rs.getString("profession");
            String noOfAppsUsed = Integer.toString(rs.getInt("noOfAppsUsed"));
            String noOfAppsPurchased = Integer.toString(rs.getInt("noOfAppsPurchased"));
            //System.out.println( cus_name + " " + cus_address + " " + cus_usertype + " " + cus_noofappsused );
            textTypeOfCustomer.setText(typeOfCustomer);
            textName.setText(name);
            textAge.setText(age);
            textAddress.setText(address);
            textProfession.setText(profession);
            textNoOfAppsUsed.setText(noOfAppsUsed);
            textNoOfAppsPurchased.setText(noOfAppsPurchased);
        }
        catch ( SQLException err ) {
            JOptionPane.showMessageDialog(Workers1.this, err.getMessage());
        }
    }//GEN-LAST:event_btnDeleteRecordActionPerformed

    private void btnSaveRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveRecordActionPerformed
        // TODO add your handling code here:
        String typeOfCustomer = textTypeOfCustomer.getText();
        String name = textName.getText();
        int age = Integer.parseInt(textAge.getText());
        String address = textAddress.getText();
        String profession = textProfession.getText();
        int NoOfAppsUsed = Integer.parseInt(textNoOfAppsUsed.getText());
        int NoOfAppsPurchased = Integer.parseInt(textNoOfAppsPurchased.getText());
        
        try {
            rs.moveToInsertRow( );
            
            rs.updateString( "typeOfCustomer", typeOfCustomer );
            rs.updateString( "name", name );
            rs.updateInt( "age", age );
            rs.updateString( "address", address );
            rs.updateString( "profession", profession );
            rs.updateInt( "NoOfAppsUsed", NoOfAppsUsed );
            rs.updateInt( "NoOfAppsPurchased", NoOfAppsPurchased );
            
            rs.insertRow( );
            
            stmt.close();
            rs.close();
            
            stmt = con.createStatement( ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE );  //ResultSet.TYPE_SCROLL_SENSITIVE
            String SQL = "SELECT * FROM customer";
            rs = stmt.executeQuery( SQL );
            
            rs.next();
            String typeOfCustomer2 = rs.getString("typeOfCustomer");
            String name2 = rs.getString("name");
            String age2 = Integer.toString(rs.getInt("age"));
            String address2 = rs.getString("address");
            String profession2 = rs.getString("profession");
            String noOfAppsUsed2 = Integer.toString(rs.getInt("noOfAppsUsed"));
            String noOfAppsPurchased2 = Integer.toString(rs.getInt("noOfAppsPurchased"));
            //System.out.println( cus_name + " " + cus_address + " " + cus_usertype + " " + cus_noofappsused );
            textTypeOfCustomer.setText(typeOfCustomer2);
            textName.setText(name2);
            textAge.setText(age2);
            textAddress.setText(address2);
            textProfession.setText(profession2);
            textNoOfAppsUsed.setText(noOfAppsUsed2);
            textNoOfAppsPurchased.setText(noOfAppsPurchased2);
            
            btnFirst.setEnabled( true );
            btnPrevious.setEnabled( true ) ;
            btnNext.setEnabled( true );
            btnLast.setEnabled( true );
            btnUpdateRecord.setEnabled( true );
            btnDeleteRecord.setEnabled( true );
            btnNewRecord.setEnabled( true );
            
            btnSaveRecord.setEnabled( false );
            btnCancelNewRecord.setEnabled( false );
            //}
        }
        catch ( SQLException err ) {
            System.out.println(err.getMessage());
        }
    }//GEN-LAST:event_btnSaveRecordActionPerformed

    private void btnCancelNewRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelNewRecordActionPerformed
        try {
            // TODO add your handling code here:
            rs.absolute( curRow );
            /*To move the Cursor back to the row it was previously pointing to, we can use the absolute method:
            The absolute method moves the Cursor to a fixed position in the ResultSet. We want to move it the 
            value that we stored in the variable curRow.*/
            String typeOfCustomer = rs.getString("typeOfCustomer");
            String name = rs.getString("name");
            String age = Integer.toString(rs.getInt("age"));
            String address = rs.getString("address");
            String profession = rs.getString("profession");
            String noOfAppsUsed = Integer.toString(rs.getInt("noOfAppsUsed"));
            String noOfAppsPurchased = Integer.toString(rs.getInt("noOfAppsPurchased"));
            //System.out.println( cus_name + " " + cus_address + " " + cus_usertype + " " + cus_noofappsused );
            textTypeOfCustomer.setText(typeOfCustomer);
            textName.setText(name);
            textAge.setText(age);
            textAddress.setText(address);
            textProfession.setText(profession);
            textNoOfAppsUsed.setText(noOfAppsUsed);
            textNoOfAppsPurchased.setText(noOfAppsPurchased);
                
                
            btnFirst.setEnabled( true );
            btnPrevious.setEnabled( true ) ;
            btnNext.setEnabled( true );
            btnLast.setEnabled( true );
            btnUpdateRecord.setEnabled( true );
            btnDeleteRecord.setEnabled( true );
            btnNewRecord.setEnabled( true );
            
            btnSaveRecord.setEnabled( false );
            btnCancelNewRecord.setEnabled( false );
        } catch (SQLException err) {
            System.out.println(err.getMessage());
        }
    }//GEN-LAST:event_btnCancelNewRecordActionPerformed

    private void textTypeOfCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textTypeOfCustomerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textTypeOfCustomerActionPerformed

    private void textAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textAgeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Workers1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Workers1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Workers1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Workers1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Workers1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelNewRecord;
    private javax.swing.JButton btnDeleteRecord;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnNewRecord;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrevious;
    private javax.swing.JButton btnSaveRecord;
    private javax.swing.JButton btnUpdateRecord;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField textAddress;
    private javax.swing.JTextField textAge;
    private javax.swing.JTextField textName;
    private javax.swing.JTextField textNoOfAppsPurchased;
    private javax.swing.JTextField textNoOfAppsUsed;
    private javax.swing.JTextField textProfession;
    private javax.swing.JTextField textTypeOfCustomer;
    // End of variables declaration//GEN-END:variables
}
